//=============================================================================
//
// パーティクル処理 [bullet.h]
// Author : 樋宮 匠
//
//=============================================================================

// 2重インクルード防止用
#ifndef _PARTICLE_H_
#define _PARTICLE_H_
//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "main.h"
#include "polygon3d.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define PARTICLE_LIFE 30	// 弾の寿命
#define PARTICLE_MOVE 3
#define PARTICLE_NUM 5

//*****************************************************************************
// 前方宣言
//*****************************************************************************

//*****************************************************************************
// バレットクラス定義
//*****************************************************************************
class CParticle :public CPolygon3D
{
public:
	CParticle();
	~CParticle();
	HRESULT Init(D3DXVECTOR3 pos);
	void Update();
	void Draw();
	void Uninit();
	static HRESULT Load(void);
	static void Unload(void);
	static CParticle * Create(D3DXVECTOR3 pos);
	static void SetParticle(D3DXVECTOR3 pos);
private:
	static LPDIRECT3DTEXTURE9		m_pTexture;		// テクスチャへのポインタ
	D3DXVECTOR3						m_pos;
	D3DXVECTOR3						m_move;		    // ポリゴンの移動量
	int								m_nLife;		// パーティクルの寿命
};
#endif
