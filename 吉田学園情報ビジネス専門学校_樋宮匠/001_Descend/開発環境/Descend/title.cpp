//=============================================================================
//
// タイトル処理 [title.cpp]
// Author : 樋宮 匠
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "title.h"
#include "keyboard.h"
#include "renderer.h"
#include "manager.h"
#include "fade.h"

//*****************************************************************************
// 静的メンバ変数宣言
//*****************************************************************************
LPDIRECT3DTEXTURE9 CTitle::m_pTexture = NULL;
bool CTitle::m_bChageMode = false;

//=============================================================================
// コンストラクタ
//=============================================================================
CTitle::CTitle()
{
	m_pPolygon = NULL;
}

//=============================================================================
// デストラクタ
//=============================================================================
CTitle::~CTitle()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTitle::Init(void)
{
	// 初期化処理
	m_pPolygon = CPolygon2D::Create();
	// 座標設定
	m_pPolygon->SetPos(D3DXVECTOR3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, 0.0f));
	m_pPolygon->SetSize(SCREEN_WIDTH, SCREEN_HEIGHT);
	// テクスチャ割り当て
	m_pPolygon->BindTexture(m_pTexture);
	m_pPolygon->SetTexUV(0.0f, 1.0f, 0.0f, 1.0f);
	m_pPolygon->SetCol(D3DCOLOR_RGBA(255, 255, 255, 255));

	m_bChageMode = false;
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CTitle::Uninit(void)
{
	m_pPolygon->Uninit();

	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTitle::Update(void)
{
	CInputKeyboard *pInput = CManager::GetInput();

	if (!m_bChageMode && pInput->GetKeyboardTrigger(DIK_RETURN))
	{
		m_bChageMode = true;
		CFade::SetFade(CManager::MODE_GAME_STAGE_01);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CTitle::Draw(void)
{
}

//=============================================================================
// コンストラクタ
//=============================================================================
CTitle * CTitle::Create(void)
{
	CTitle *pTitle;
	pTitle = new CTitle;
	pTitle->Init();
	return pTitle;
}

//=============================================================================
// テクスチャ読み込み処理
//=============================================================================
HRESULT CTitle::Load(void)
{
	D3DXCreateTextureFromFile(CManager::GetRenderer()->GetDevice(), "./data/TEXTURE/Block_01.png", &m_pTexture);

	return S_OK;
}

//=============================================================================
// テクスチャ破棄処理
//=============================================================================
void CTitle::Unload(void)
{
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}